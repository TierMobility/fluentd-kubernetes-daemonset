version: 2.1

orbs:
  awscli: circleci/aws-cli@0.1.6
  aws-ecr: circleci/aws-ecr@4.0.1

jobs:
  build-and-push-image:
    description: "Build and push image to ECR. Tagged as latest-<branch_name> and with <git_commit_hash>"

    environment:
      REPOSITORY_NAME: 'tier/fluentd-kubernetes-daemonset'
      DOCKER_SRC: 'docker-image/v1.4/debian-cloudwatch'

    docker:
      - image: 373437620866.dkr.ecr.eu-central-1.amazonaws.com/tier/buildtools:latest

    working_directory: ~/repo
    steps:
      - setup_remote_docker:  # required for running docker commands, creates a remote environment
          docker_layer_caching: true # enable caching of docker layers from previous builds to speed up image creation
      - aws-ecr/build-and-push-image:
          dockerfile: ${DOCKER_SRC}/Dockerfile
          path: ${DOCKER_SRC}
          region: AWS_DEFAULT_REGION
          create-repo: true
          repo: ${REPOSITORY_NAME}
          tag: ${CIRCLE_SHA1:0:8}
      # this build will essentially just tag the image that has already been built
      - aws-ecr/build-and-push-image:
          dockerfile: ${DOCKER_SRC}/Dockerfile
          path: ${DOCKER_SRC}
          region: AWS_DEFAULT_REGION
          repo: ${REPOSITORY_NAME}
          tag: latest-${CIRCLE_BRANCH//\//-}
      - aws-ecr/build-and-push-image:
          dockerfile: ${DOCKER_SRC}/Dockerfile
          path: ${DOCKER_SRC}
          region: AWS_DEFAULT_REGION
          repo: ${REPOSITORY_NAME}
          tag: v1.4.2-debian-cloudwatch-1.0
      - run:
          name: "Set ECR repo permissions to allow access from other AWS accounts"
          command: >
            aws ecr --region ${AWS_DEFAULT_REGION} set-repository-policy --repository-name ${REPOSITORY_NAME}
            --policy-text '{
                            "Version": "2008-10-17",
                            "Statement": [
                              {
                                "Sid": "new statement",
                                "Effect": "Allow",
                                "Principal": {
                                  "AWS": [
                                    "arn:aws:iam::075108987694:root",
                                    "arn:aws:iam::199745669981:root"
                                  ]
                                },
                                "Action": [
                                  "ecr:BatchCheckLayerAvailability",
                                  "ecr:BatchGetImage",
                                  "ecr:GetDownloadUrlForLayer",
                                  "ecr:ListImages"
                                ]
                              }
                            ]
                          }'



workflows:
  version: 2
  build:
    jobs:
    - build-and-push-image:
        context: global-production
        filters:
            branches:
              only: master
